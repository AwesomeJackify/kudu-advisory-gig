---
import Layout from "../../layouts/Layout.astro";
import { Image } from "astro:assets";
import SectionBlock from "../../components/blocks/SectionBlock.astro";
import config from "../../config.json";

import { getSpotifyAccessToken } from "../../utils/spotifyToken";
const accessToken = await getSpotifyAccessToken();

const pageNo = parseInt(Astro.params.pageNo || "1", 10);

var total_page_no = 0;
const episodes: any = [];
var response: Response | undefined = undefined;

try {
  response = await fetch(
    "https://api.spotify.com/v1/shows/" + config.podcastId,
    {
      headers: {
        Authorization: `Bearer ${accessToken}`,
      },
    }
  );

  const data = await response.json();
  total_page_no = Math.ceil(data.total_episodes / 9);

  if (pageNo !== undefined) {
    const offset = (pageNo - 1) * 9;
    response = await fetch(
      `https://api.spotify.com/v1/shows/${config.podcastId}/episodes?offset=${offset}&limit=9`,
      {
        headers: {
          Authorization: `Bearer ${accessToken}`,
        },
      }
    );
    const data = await response.json();
    episodes.push(...data.items);
  }
} catch (error) {}
---

<Layout title={`Podcast - Page ${pageNo}`}>
  <SectionBlock heading="Kiwi Business Stories">
    <!-- <h2 class="text-2xl text-center font-bold">Page {pageNo}</h2> -->
    <div class="grid grid-cols-3 max-md:grid-cols-1 gap-8 max-md:gap-12">
      {
        episodes.map((episode: any) => (
          <a
            href={`/episode/${episode.id}`}
            class="flex flex-col max-md:w-full gap-4 group bg-primary text-primary-content p-4 rounded-2xl"
          >
            <div class="overflow-hidden rounded-2xl">
              <Image
                src={episode.images[0].url}
                alt={episode.name}
                width={640}
                height={640}
                class="w-full object-cover transition-all md:group-hover:opacity-80 md:group-hover:scale-110"
              />
            </div>
            <h1 class="text-2xl transition-colors font-bold">{episode.name}</h1>
            <p class="font-light">{episode.description}</p>
          </a>
        ))
      }
    </div>
    <div class="flex w-full justify-between">
      {
        pageNo > 1 ? (
          <a href={`/episodes/${pageNo - 1}`} class="btn">
            Previous
          </a>
        ) : (
          <div />
        )
      }

      {
        pageNo < total_page_no ? (
          <a href={`/episodes/${pageNo + 1}`} class="btn">
            Next
          </a>
        ) : (
          <div />
        )
      }
    </div>
  </SectionBlock>
</Layout>
